name: Token Validation

on:
  workflow_call:
    inputs:
      token-type:
        required: true
        type: string
        description: 'Type of token to validate (vault, github)'
    outputs:
      token-ttl:
        description: 'Remaining TTL of the token in seconds'
        value: ${{ jobs.validate-token.outputs.token-ttl }}
      token-valid:
        description: 'Whether the token is valid'
        value: ${{ jobs.validate-token.outputs.token-valid }}

jobs:
  validate-token:
    name: Validate Token
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    outputs:
      token-ttl: ${{ steps.check-token.outputs.token_ttl }}
      token-valid: ${{ steps.check-token.outputs.token_valid }}
    
    strategy:
      matrix:
        validation-type: ['token']  # Mandatory matrix, even if single value
    
    steps:
      - uses: actions/checkout@v4

      - name: Log token metadata
        id: token-metadata
        run: |
          echo "::notice::Validating ${{ inputs.token-type }} token"
          echo "Start time: $(date -u '+%Y-%m-%d %H:%M:%S UTC')"

      - name: Validate token
        id: check-token
        run: |
          case "${{ inputs.token-type }}" in
            "vault")
              # Authenticate to Vault via OIDC
              VAULT_TOKEN=$(vault write -field=token auth/jwt/login \
                role=github-actions \
                jwt=${{ env.ACTIONS_ID_TOKEN_REQUEST_TOKEN }})
              
              # Check token TTL
              TTL=$(vault token lookup -format=json "$VAULT_TOKEN" | jq -r .data.ttl)
              echo "Vault token TTL: $TTL seconds"
              
              if [ "$TTL" -le 0 ]; then
                echo "token_valid=false" >> $GITHUB_OUTPUT
                echo "token_ttl=0" >> $GITHUB_OUTPUT
                exit 1
              fi
              
              echo "token_valid=true" >> $GITHUB_OUTPUT
              echo "token_ttl=$TTL" >> $GITHUB_OUTPUT
              ;;
              
            "github")
              # Get token expiration from GITHUB_TOKEN
              EXPIRES=$(curl -s \
                -H "Authorization: token ${{ github.token }}" \
                -H "Accept: application/vnd.github.v3+json" \
                https://api.github.com/rate_limit | jq -r '.resources.core.reset')
              
              NOW=$(date +%s)
              TTL=$((EXPIRES - NOW))
              
              if [ "$TTL" -le 0 ]; then
                echo "token_valid=false" >> $GITHUB_OUTPUT
                echo "token_ttl=0" >> $GITHUB_OUTPUT
                exit 1
              fi
              
              echo "token_valid=true" >> $GITHUB_OUTPUT
              echo "token_ttl=$TTL" >> $GITHUB_OUTPUT
              ;;
              
            *)
              echo "Unsupported token type: ${{ inputs.token-type }}"
              exit 1
              ;;
          esac

      - name: Log validation results
        if: always()
        run: |
          echo "Token validation completed"
          echo "Valid: ${{ steps.check-token.outputs.token_valid }}"
          echo "TTL: ${{ steps.check-token.outputs.token_ttl }} seconds"
          echo "End time: $(date -u '+%Y-%m-%d %H:%M:%S UTC')"