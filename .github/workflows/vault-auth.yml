name: Vault Authenticationname: Vault Auth



on:on:

  workflow_call:  workflow_dispatch:

    outputs:

      vault-token:permissions:

        description: "Vault token for authenticated session"  id-token: write

        value: ${{ jobs.vault-auth.outputs.vault-token }}  contents: read

  workflow_dispatch:

jobs:

permissions:  vault-login:

  id-token: write    runs-on: ubuntu-latest

  contents: read    steps:

      - name: Checkout

jobs:        uses: actions/checkout@v4

  vault-auth:

    name: Authenticate with Vault      - name: Authenticate to Vault via OIDC

    runs-on: ubuntu-latest        id: vault-login

    outputs:        uses: hashicorp/vault-action@v2

      vault-token: ${{ steps.validate-token.outputs.validated_token }}        with:

          url: ${{ secrets.VAULT_ADDR }}

    steps:          method: github

    - uses: actions/checkout@v4          role: github-actions-role



    - name: Authenticate to Vault via OIDC      - name: Export Vault token

      id: vault-login        run: |

      uses: hashicorp/vault-action@v2          echo "VAULT_TOKEN=${{ steps.vault-login.outputs.client_token }}" >> $GITHUB_ENV

      with:

        url: https://vault.fintech-blueprint.io      - name: Test dynamic secret

        method: jwt        run: |

        jwtGithubAudience: "https://github.com/Fintech-Blueprint"          vault kv put secret/test key=value || true

        role: github-actions          vault kv get secret/test || true

        exportToken: true

    - name: Validate Vault Token
      id: validate-token
      run: |
        TOKEN_INFO=$(curl -s \
          -H "X-Vault-Token: ${{ steps.vault-login.outputs.token }}" \
          ${{ steps.vault-login.outputs.url }}/v1/auth/token/lookup-self)
        
        # Validate token properties
        POLICIES=$(echo $TOKEN_INFO | jq -r '.data.policies[]')
        TTL=$(echo $TOKEN_INFO | jq -r '.data.ttl')
        
        # Ensure token has required policies
        if ! echo "$POLICIES" | grep -q "github-actions"; then
          echo "Error: Token missing required github-actions policy"
          exit 1
        fi
        
        # Ensure reasonable TTL (e.g., less than 1 hour)
        if [ "$TTL" -gt 3600 ]; then
          echo "Error: Token TTL exceeds maximum allowed (1 hour)"
          exit 1
        fi
        
        # Export validated token
        echo "validated_token=${{ steps.vault-login.outputs.token }}" >> $GITHUB_OUTPUT
        echo "Token validated successfully"

    - name: Test Vault Access
      if: github.event_name == 'workflow_dispatch'
      run: |
        # Test reading a benign secret to verify token works
        vault read -format=json secret/data/test/version \
          | jq -r '.data.data.version'