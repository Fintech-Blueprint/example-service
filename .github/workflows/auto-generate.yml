name: Auto-Generate from Spec

on:
  pull_request:
    paths:
      - 'features/**/*.feature'
  workflow_run:
    workflows: ["Validate BDD Specifications"]
    types:
      - completed

jobs:
  check-validation:
    runs-on: ubuntu-latest
    if: |
      github.event_name == 'workflow_run' &&
      github.event.workflow_run.conclusion == 'success'
    steps:
      - name: Download validation results
        uses: actions/download-artifact@v3
        with:
          name: spec-coverage-report
          path: reports
          
      - name: Check validation status
        id: check
        run: |
          ERRORS=$(jq '.scenarios_with_errors' reports/spec-coverage.json)
          if [ "$ERRORS" -gt 0 ]; then
            echo "Validation found $ERRORS scenarios with errors"
            exit 1
          fi
          
  generate-code:
    needs: check-validation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          
      - name: Generate code
        id: generate
        run: |
          # Get feature SHA for branch name
          SPEC_SHA=$(python -c "
          import hashlib
          from pathlib import Path
          files = sorted(Path('features').rglob('*.feature'))
          hasher = hashlib.sha256()
          for f in files:
              hasher.update(f.read_bytes())
          print(hasher.hexdigest()[:8])
          ")
          
          # Generate code with manifest
          python scripts/generate_from_spec.py --idempotent --sign
          
          echo "spec_sha=$SPEC_SHA" >> $GITHUB_OUTPUT
          
      - name: Create Pull Request
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SPEC_SHA: ${{ steps.generate.outputs.spec_sha }}
        run: |
          # Create branch
          git checkout -b auto/spec-implementation/$SPEC_SHA
          
          # Stage and commit changes
          git add generated/ reports/
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git commit -m "feat(auto): generate implementation for spec $SPEC_SHA"
          
          # Create PR with coverage and estimates
          gh pr create \
            --title "feat(auto): generate implementation for spec $SPEC_SHA" \
            --body "$(cat << 'EOF'
          ðŸ¤– Auto-generated implementation from BDD specifications
          
          ## Coverage Report
          \`\`\`json
          $(cat reports/spec-coverage.json)
          \`\`\`
          
          ## Resource Estimates
          \`\`\`json
          $(cat reports/resource-estimates.json)
          \`\`\`
          
          ## Checklist
          - [ ] validate-specs passed
          - [ ] flake8 passed
          - [ ] tests passed
          - [ ] sbom attached
          - [ ] resource-estimates attached
          
          ## Generated Files Manifest
          See [manifest.json](generated/manifest.json)
          EOF
          )"